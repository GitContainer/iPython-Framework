'''
    Python mapping for the UIKit framework.
    
    This module does not contain docstrings for the wrapped code, check Apple's
    documentation for details on how to use these functions and classes.
    '''
import sys
import objc
import Foundation
from UIKit_inlines import _inline_list_
from UIKit import _metadata
import os

def NSDictionaryOfVariableBindings(*names):
    """
        Return a dictionary with the given names and there values.
        """
    import sys
    variables = sys._getframe(1).f_locals
    
    return {
        nm: variables[nm]
        for nm in names
}

sys.modules['UIKit'] = mod = objc.ObjCLazyModule('UIKit',
        "com.apple.UIKit",
#        objc.__path__[0]+"/Frameworks/UIKit.framework",
                                                 None,
        _metadata.__dict__, _inline_list_, {
            '__doc__': __doc__,
            'objc': objc,
            'NSDictionaryOfVariableBindings': NSDictionaryOfVariableBindings,
            '__path__': __path__,
            '__loader__': globals().get('__loader__', None),
        }, (Foundation,))

# NSApp is a global variable that can be changed in ObjC,
# somewhat emulate that (it is *not* possible to assign to
# NSApp in Python)
#from UIKit._nsapp import NSApp
#mod.NSApp = NSApp

# Manually written wrappers:

import _UIKit
for nm in dir(_UIKit):
    setattr(mod, nm, getattr(_UIKit, nm))

# Fix types for a number of character constants
try:
    unichr
except NameError:
    unichr = chr

import sys
